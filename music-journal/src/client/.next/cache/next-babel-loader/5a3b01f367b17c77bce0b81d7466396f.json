{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport router from 'next/router';\nimport { firebase } from './initFirebase';\nimport cookies from 'next-cookies';\n\nconst withAuth = Component => {\n  return class extends React.Component {\n    static async getInitialProps(ctx) {\n      const {\n        firebaseToken\n      } = cookies(ctx);\n\n      if (!firebaseToken) {\n        return {};\n      }\n\n      firebase.auth().signInWithCustomToken(firebaseToken).catch(function (error) {});\n      const user = firebase.auth().currentUser;\n      return {\n        user\n      };\n    }\n\n    constructor(props) {\n      super(props);\n      this.state = {\n        status: 'LOADING'\n      };\n    }\n\n    componentDidMount() {\n      if (this.props.user) {\n        this.setState({\n          status: 'SIGNED_IN'\n        });\n      } else {\n        router.push('/login');\n      }\n    }\n\n    renderContent() {\n      const {\n        status\n      } = this.state;\n\n      if (status == 'LOADING') {\n        return __jsx(\"h1\", null, \"Loading ......\");\n      } else if (status == 'SIGNED_IN') {\n        return __jsx(Component, this.props);\n      }\n    }\n\n    render() {\n      return __jsx(React.Fragment, null, this.renderContent());\n    }\n\n  };\n};\n\nexport default withAuth;","map":null,"metadata":{},"sourceType":"module"}