{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect, useState } from 'react';\nimport { Row, Col, Table } from 'react-bootstrap/'; //TODO: Move to services\n\nvar fetcher = function fetcher(url) {\n  return fetch(url, {\n    method: 'GET'\n  }).then(function (res) {\n    return res.json();\n  });\n};\n\nvar ListMemories = function ListMemories(_ref) {\n  var firebaseToken = _ref.firebaseToken;\n\n  var _useState = useState({}),\n      memories = _useState[0],\n      setMemories = _useState[1];\n\n  useEffect(function () {\n    fetcher('/api/list-memories').then(function (json) {\n      setMemories(json);\n    });\n  }, []);\n\n  if (!memories || memories.length < 1) {\n    return __jsx(\"p\", {\n      id: \"nomemories\"\n    }, \"You havent added any memories yet.....\");\n  }\n\n  return __jsx(React.Fragment, null, __jsx(Col, {\n    xs: 6\n  }, __jsx(Row, {\n    className: \"justify-content-center\",\n    xs: 12\n  }, __jsx(\"h4\", null, \"Your Top Memories\")), __jsx(Row, {\n    className: \"justify-content-center\"\n  }, __jsx(Table, {\n    striped: true,\n    bordered: true,\n    hover: true,\n    size: \"sm\",\n    id: \"memoriestable\"\n  }, __jsx(\"thead\", null, __jsx(\"tr\", null, __jsx(\"th\", null, \"Song\"), __jsx(\"th\", null, \"Memory\"))), __jsx(\"tbody\", {\n    id: \"memoriestablebody\"\n  }, memories.length > 0 && memories.map(function (memory) {\n    return __jsx(\"tr\", {\n      key: memory.song\n    }, __jsx(\"td\", null, memory.song), __jsx(\"td\", null, memory.text));\n  }))))));\n};\n\nListMemories.getInitialProps = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(ctx) {\n    var _cookies, firebaseToken;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _cookies = cookies(ctx), firebaseToken = _cookies.firebaseToken;\n\n            if (firebaseToken) {\n              _context.next = 3;\n              break;\n            }\n\n            return _context.abrupt(\"return\", {});\n\n          case 3:\n            return _context.abrupt(\"return\", {\n              firebaseToken: firebaseToken\n            });\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexport default ListMemories; // <Table striped bordered hover size=\"sm\">\n//             <thead>\n//               <tr>\n//                 <th>#</th>\n//                 <th>First Name</th>\n//                 <th>Last Name</th>\n//                 <th>Username</th>\n//               </tr>\n//             </thead>\n//             <tbody>\n//               <tr>\n//                 <td>1</td>\n//                 <td>Mark</td>\n//                 <td>Otto</td>\n//                 <td>@mdo</td>\n//               </tr>\n//               <tr>\n//                 <td>2</td>\n//                 <td>Jacob</td>\n//                 <td>Thornton</td>\n//                 <td>@fat</td>\n//               </tr>\n//               <tr>\n//                 <td>3</td>\n//                 <td colSpan=\"2\">Larry the Bird</td>\n//                 <td>@twitter</td>\n//               </tr>\n//             </tbody>\n//           </Table>","map":null,"metadata":{},"sourceType":"module"}