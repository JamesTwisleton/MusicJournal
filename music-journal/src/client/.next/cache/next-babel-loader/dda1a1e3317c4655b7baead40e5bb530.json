{"ast":null,"code":"export default async function handler(req, res) {\n  const firebaseAdmin = require('firebase-admin');\n\n  const firebase = require('firebase');\n\n  const serviceAccount = require('../../service-account.json');\n\n  const SpotifyWebApi = require('spotify-web-api-node');\n\n  if (!firebaseAdmin.apps.length) {\n    firebaseAdmin.initializeApp({\n      credential: firebaseAdmin.credential.cert(serviceAccount),\n      databaseURL: process.env.FIREBASE_DATABASE_URL\n    });\n  }\n\n  const Spotify = new SpotifyWebApi({\n    clientId: process.env.SPOTIFY_CLIENT_ID,\n    clientSecret: process.env.SPOTIFY_CLIENT_SECRET,\n    redirectUri: process.env.AUTH_REDIRECT_URL\n  });\n  const user = firebase.auth().currentUser;\n  const ref = await firebaseAdmin.database().ref(`/spotifyAccessToken/${user.uid}`);\n  let spotifyToken;\n  await ref.orderByValue().once(\"value\", snapshot => {\n    spotifyToken = snapshot.node_.value_;\n    Spotify.setAccessToken(spotifyToken);\n    let recentSongs = [];\n    Spotify.getMyRecentlyPlayedTracks({\n      limit: 20\n    }).then(function (data) {\n      //higher number = more time since listened\n      let recentTrackOrder = 0;\n      data.body.items.forEach(item => {\n        console.log(item.track);\n        recentSongs.push({\n          position: recentTrackOrder,\n          trackName: item.track.name,\n          description: `${item.track.name} by ${item.track.artists[0].name}`,\n          image: item.track.album.images[0],\n          track: item.track\n        });\n        recentTrackOrder += 1;\n      });\n      res.send(recentSongs);\n    }, function (err) {\n      console.log('Something went wrong!', err);\n    });\n  });\n}","map":null,"metadata":{},"sourceType":"module"}