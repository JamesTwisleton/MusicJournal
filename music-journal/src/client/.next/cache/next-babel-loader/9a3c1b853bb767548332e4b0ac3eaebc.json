{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect, useState } from 'react';\nimport { Row, Col, Carousel } from 'react-bootstrap/';\nimport { NavigationBar } from '../components/NavigationBar'; //TODO: Move to services\n\nvar fetcher = function fetcher(url) {\n  return fetch(url, {\n    method: 'GET'\n  }).then(function (res) {\n    return res.json();\n  });\n};\n\nvar RecentTracks = function RecentTracks(_ref) {\n  var firebaseToken = _ref.firebaseToken;\n\n  var _useState = useState(0),\n      carouselIndex = _useState[0],\n      setCarouselIndex = _useState[1];\n\n  var _useState2 = useState([]),\n      recentTracks = _useState2[0],\n      setRecentTracks = _useState2[1];\n\n  var _useState3 = useState(1),\n      scaleDirection = _useState3[0],\n      setScaleDirection = _useState3[1];\n\n  var _useState4 = useState(0),\n      scaleRatio = _useState4[0],\n      setScaleRatio = _useState4[1];\n\n  useEffect(function () {\n    setTimeout(function () {\n      return console.log('Hello, World!');\n    }, 3000);\n    setInterval(function () {\n      if (scaleRatio > .2) {\n        setScaleDirection(-1);\n      }\n\n      if (scaleRatio < 0) {\n        setScaleDirection(1);\n      }\n\n      setScaleRatio(scaleRatio + .00009 * scaleDirection);\n      console.log(scaleRatio);\n    }, 10);\n    fetcher('/api/recent-tracks-from-spotify').then(function (json) {\n      setRecentTracks(json);\n    });\n  }, []);\n\n  var moveCarousel = function moveCarousel(index) {\n    var nextIndex = carouselIndex + index;\n\n    if (nextIndex < 0) {\n      nextIndex = recentTracks.length - 1;\n    }\n\n    setCarouselIndex(nextIndex % recentTracks.length);\n    console.log(carouselIndex);\n  };\n\n  return __jsx(\"div\", {\n    style: {\n      overflowX: 'hidden',\n      overflowY: 'hidden'\n    }\n  }, __jsx(\"div\", {\n    className: \"backgroundDiv\",\n    style: recentTracks.length > 0 ? {\n      background: \"url(\".concat(recentTracks[carouselIndex].image.url, \") center center/cover no-repeat fixed\"),\n      transform: \"scale(\".concat(1 + scaleRatio, \", \").concat(1 + scaleRatio, \")\"),\n      height: '100vh'\n    } : {}\n  }, __jsx(\"div\", {\n    style: {\n      height: '100%',\n      width: '100%'\n    }\n  }, __jsx(\"div\", {\n    style: {\n      height: '100%',\n      \"float\": 'left',\n      width: '50%'\n    },\n    onClick: function onClick() {\n      return moveCarousel(-1);\n    }\n  }), __jsx(\"div\", {\n    style: {\n      height: '100%',\n      \"float\": 'left',\n      width: '50%'\n    },\n    onClick: function onClick() {\n      return moveCarousel(1);\n    }\n  }))), __jsx(\"p\", {\n    style: {\n      background: 'black',\n      color: 'white',\n      fontSize: '50px',\n      textAlign: 'center',\n      opacity: '.8',\n      position: 'absolute',\n      bottom: '0'\n    }\n  }, recentTracks.length > 0 ? recentTracks[carouselIndex].description : ''));\n};\n\nRecentTracks.getInitialProps = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(ctx) {\n    var _cookies, firebaseToken;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _cookies = cookies(ctx), firebaseToken = _cookies.firebaseToken;\n\n            if (firebaseToken) {\n              _context.next = 3;\n              break;\n            }\n\n            return _context.abrupt(\"return\", {});\n\n          case 3:\n            return _context.abrupt(\"return\", {\n              firebaseToken: firebaseToken\n            });\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexport default RecentTracks;","map":null,"metadata":{},"sourceType":"module"}