{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect, useState } from 'react';\nimport { Row, Col, Carousel } from 'react-bootstrap/';\nimport { NavigationBar } from '../components/NavigationBar'; //TODO: Move to services\n\nconst fetcher = url => fetch(url, {\n  method: 'GET'\n}).then(res => res.json());\n\nconst RecentTracks = ({\n  firebaseToken\n}) => {\n  const {\n    0: carouselIndex,\n    1: setCarouselIndex\n  } = useState(0);\n  const {\n    0: recentTracks,\n    1: setRecentTracks\n  } = useState([]);\n  const {\n    0: scaleDirection,\n    1: setScaleDirection\n  } = useState(1);\n  const {\n    0: scaleRatio,\n    1: setScaleRatio\n  } = useState(0);\n  useEffect(() => {\n    setTimeout(() => console.log('Hello, World!'), 3000);\n    setInterval(() => {\n      if (scaleRatio > .2) {\n        setScaleDirection(-1);\n      }\n\n      if (scaleRatio < 0) {\n        setScaleDirection(1);\n      }\n\n      setScaleRatio(scaleRatio + .00009 * scaleDirection);\n      console.log(scaleRatio);\n    }, 10);\n    fetcher('/api/recent-tracks-from-spotify').then(json => {\n      setRecentTracks(json);\n    });\n  }, []);\n\n  const moveCarousel = index => {\n    let nextIndex = carouselIndex + index;\n\n    if (nextIndex < 0) {\n      nextIndex = recentTracks.length - 1;\n    }\n\n    setCarouselIndex(nextIndex % recentTracks.length);\n    console.log(carouselIndex);\n  };\n\n  return __jsx(\"div\", {\n    style: {\n      overflowX: 'hidden',\n      overflowY: 'hidden'\n    }\n  }, __jsx(\"div\", {\n    className: \"backgroundDiv\",\n    style: recentTracks.length > 0 ? {\n      background: `url(${recentTracks[carouselIndex].image.url}) center center/cover no-repeat fixed`,\n      transform: `scale(${1 + scaleRatio}, ${1 + scaleRatio})`,\n      height: '100vh'\n    } : {}\n  }, __jsx(\"div\", {\n    style: {\n      height: '100%',\n      width: '100%'\n    }\n  }, __jsx(\"div\", {\n    style: {\n      height: '100%',\n      float: 'left',\n      width: '50%'\n    },\n    onClick: () => moveCarousel(-1)\n  }), __jsx(\"div\", {\n    style: {\n      height: '100%',\n      float: 'left',\n      width: '50%'\n    },\n    onClick: () => moveCarousel(1)\n  }))), __jsx(\"p\", {\n    style: {\n      background: 'black',\n      color: 'white',\n      fontSize: '50px',\n      textAlign: 'center',\n      opacity: '.8',\n      position: 'absolute',\n      bottom: '0'\n    }\n  }, recentTracks.length > 0 ? recentTracks[carouselIndex].description : ''));\n};\n\nRecentTracks.getInitialProps = async ctx => {\n  const {\n    firebaseToken\n  } = cookies(ctx);\n\n  if (!firebaseToken) {\n    return {};\n  }\n\n  return {\n    firebaseToken\n  };\n};\n\nexport default RecentTracks;","map":null,"metadata":{},"sourceType":"module"}