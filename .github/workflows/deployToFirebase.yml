name: Build and Deploy
on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@main
      - name: populate service account
        run: 'echo "$SERVICE_ACCOUNT" > service-account.json'
        shell: bash
        env:
          SERVICE_ACCOUNT: ${{ secrets.SERVICE_ACCOUNT }}
      - name: Install Dependencies
        run: 'yarn install'
        shell: bash
      - name: Build
        run: 'yarn global add cross-env && yarn build && cross-env NODE_ENV=production'
        shell: bash
        env:
          FIREBASE_API_KEY : ${{ secrets.FIREBASE_TOKEN }}
      - name: Archive Production Artifact
        uses: actions/upload-artifact@main
        with:
          name: dist
          path: dist
  deploy:
    name: Deploy
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@main
      - name: Download Artifact
        uses: actions/download-artifact@main
        with:
          name: dist
          path: dist
      - name: Deploy to Firebase
        uses: w9jds/firebase-action@master
        with:
          args: deploy
        env:
          GCP_SA_KEY : ${{ secrets.GCP_SA_KEY }}
          FIREBASE_API_KEY : ${{ secrets.FIREBASE_TOKEN }}
          FIREBASE_AUTH_DOMAIN :  ${{ secrets.FIREBASE_AUTH_DOMAIN }}
          FIREBASE_DATABASE_URL : ${{ secrets.FIREBASE_DATABASE_URL }}
          FIREBASE_PROJECT_ID : ${{ secrets.FIREBASE_PROJECT_ID }}
          FIREBASE_STORAGE_BUCKET : ${{ secrets.FIREBASE_STORAGE_BUCKET }}
          FIREBASE_MESSAGING_SENDER_ID : ${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}
          AUTH_REDIRECT_URL : ${{ secrets.AUTH_REDIRECT_URL }}
          SPOTIFY_CLIENT_ID : ${{ secrets.SPOTIFY_CLIENT_ID }}
          SPOTIFY_CLIENT_SECRET : ${{ secrets.SPOTIFY_CLIENT_SECRET }}
          SITE_ADDRESS : ${{ secrets.SITE_ADDRESS }}
          NEXT_PUBLIC_MAPS_API_KEY : ${{ secrets.NEXT_PUBLIC_MAPS_API_KEY }}
